name: Native Build, Test, and Publish Application

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  native-build:
    name: Native Backend Build
    runs-on: macos-latest
    timeout-minutes: 40
    permissions:
      contents: write
    env:
      NODE_VERSION: 21.6.0
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
    defaults:
      run:
        shell: bash
    steps:
      - name: 'SETUP: docker'
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker
          open -a /Applications/Docker.app --args --unattended --accept-license
          #echo "We are waiting for Docker to be up and running. It can take over 2 minutes..."
          #while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done

      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node 21
      - name: Set up Node 21
        uses: actions/setup-node@v4
        with:
          node-version: 21.6.0
          cache: 'npm'
          cache-dependency-path: src/main/webapp/package-lock.json

      # Set up Java Development Kit (JDK) and GraalVM
      - name: Set up GraalVM (Java 21)
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'liberica'
          version: '22.3.0'
          java-version: '21'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      # Install Node.js dependencies for the web application
      - name: Install Node.js Packages for WebApp
        working-directory: src/main/webapp
        run: npm install

      # Download all required dependencies for Maven
      - name: Download Dependencies
        run: mvn -ntp dependency:go-offline

      # Run unit and integration tests for the backend
      - name: Run Tests
        run: mvn -ntp -Dskip.installnodenpm -Dskip.npm verify --batch-mode

      # Build native Docker image
      - name: Build Native Docker Image
        run: |
          mvn -ntp -Pnative,prod spring-boot:build-image \
            -DskipTests \
            -Dspring-boot.build-image.publish=true \
            -Ddocker.publish.username=${{ secrets.DOCKER_USERNAME }} \
            -Ddocker.publish.password=${{ secrets.DOCKER_PASSWORD }} \
            -Dspring-boot.build-image.imageName=docker.io/${{ secrets.DOCKER_USERNAME }}/spring-nextjs-app:${{ github.ref_name }}-native \
            -Dnative-build-args="--verbose -J-Xmx14g"
