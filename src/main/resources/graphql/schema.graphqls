# A slightly refined version of RFC-3339 compliant DateTime Scalar
# Example: "2023-11-10T10:00:00Z"
scalar DateTime @specifiedBy(url: "https://scalars.graphql.org/andimarek/date-time.html")

# A IETF BCP 47 language tag
# Example: "en"
scalar Locale @specifiedBy(url: "https://tools.ietf.org/html/bcp47")

# A universally unique identifier compliant UUID Scalar
# Example: "123e4567-e89b-12d3-a456-426614174000"
scalar UUID @specifiedBy(url: "https://tools.ietf.org/html/rfc4122")

# A Url scalar
# Example: "https://www.example.com"
scalar URL @specifiedBy(url: "https://www.w3.org/Addressing/URL/url-spec.txt")

# A 64-bit signed integer
# Example: 123456789012345
scalar GraphQLLong

# An arbitrary precision signed decimal
# Example: 12345.6789
scalar GraphQLBigDecimal

# Root queries for fetching data
type Query {
  # Returns a simple welcome message
  hello: HelloDTO
}

# Mutations for user authentication
type Mutation {
  # Authenticates the user with username and password, returns a JWT token.
  authenticate(loginRequest: LoginRequestDTO!): TokenDTO
}

# Subscriptions for real-time updates
type Subscription {
  # Sends a welcome message periodically, supports locale for i18n
  helloSubscription(locale: Locale): HelloDTO
}

# Data structure containing a welcome message and timestamp
type HelloDTO {
  # The welcome message content
  # Example: "Hello, welcome to our API!"
  message: String!

  # The timestamp of the welcome message
  # Example: "2023-11-10T10:00:00Z"
  timestamp: DateTime!
}

# Input structure for user login request
input LoginRequestDTO {
  # Username of the user
  # Example: "admin"
  username: String!

  # Password of the user
  # Example: "password"
  password: String!
}

# JWT token response data structure
type TokenDTO {
  # JWT access token
  # Example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  accessToken: String!

  # Type of token (e.g., "Bearer")
  # Example: "Bearer"
  tokenType: String!

  # Access token expiration time in seconds
  # Example: 3600
  accessTokenExpiresIn: Int!
}
